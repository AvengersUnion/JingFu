<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.dao.UserDao" >
	<resultMap type="com.app.entity.BackUser" id="BaseUserMap">
		<id  property="id" column="id"/>
		<result property="uName" column="un"/>
		<result property="userIphone" column="pn"/>
		<result property="passWord" column="pw"/> 
		<result property="nettime" column="nettime"/>
		<result property="token" column="token"/>
		<result property="community" column="community"/>
		<result property="houseNumber" column="houseNumber"/>
		<result property="province" column="province"/>
		<result property="city" column="city"/>
		<result property="county" column="county"/>
		<result property="village" column="village"/>
	</resultMap>
	<!-- 查询用户表中有多少用户 -->
	<select id="userNumber" parameterType="com.app.entity.BackUser" resultType="String">
		SELECT COUNT(DISTINCT consumer.ID)  FROM consumer 
		LEFT JOIN address ON consumer.ID=address.CUSTOMER_ID
		<where>
		    <if test="city != null and city != ''">
				address.CITY= #{city}
			</if>
		</where>
	</select>
	<!-- 查询所有的用户 -->
	<select id="getUserList" resultMap="BaseUserMap">
		SELECT consumer.ID,UN,consumer.PN,PW FROM consumer 
	</select>
	<!-- 根据用户的id查询用户的地址 -->
	<select id="getUserAddress" parameterType="Integer" resultMap="BaseUserMap">
		SELECT 
		address.PROVINCE,address.CITY,address.COUNTY,address.VILLAGE,address.community,houseNumber FROM address
		WHERE address.CUSTOMER_ID=#{userId}
	</select>
	<!-- 查询用户所在地的地址 -->
	<select id="getRegionList" resultType="String">
		SELECT RN FROM region
	</select>
	<!-- 根据用户的地址查询用户 -->
	<select id="getUserListByCity" parameterType="com.app.entity.BackUser" resultMap="BaseUserMap">
		SELECT consumer.ID,UN,consumer.PN,PW FROM consumer 
		LEFT JOIN address ON consumer.ID=address.CUSTOMER_ID
		<where>
			<if test="city !=null and city !=''">
				address.community like '%${city}%'
			</if>
		</where>
	</select>
	<!-- 根据用户的id查询用户 -->
	<select id="getUserById" parameterType="Integer" resultMap="BaseUserMap">
		SELECT ID,UN,PN,PROVINCE,CITY,COUNTY FROM consumer
		where id=#{id}
	</select>
	<!-- 添加用户 -->
	<insert id="addUser" parameterType="com.app.entity.BackUser">
		INSERT INTO consumer (UN,PN,PW,PROVINCE,CITY,COUNTY,nettime)
		VALUES(#{uName},#{userIphone},#{passWord},#{province},#{city},#{county},#{nettime})
	</insert>
	<!-- 修改用户 -->
	<update id="updateUser" parameterType="com.app.entity.BackUser">
		UPDATE consumer 
		<set>
		<if test="uName != null and uName !=''">UN=#{uName},</if>
      	<if test="userIphone != null and userIphone !=''">PN=#{userIphone},</if>
      	<if test="passWord !=null and passWord !=''">pw=#{passWord},</if>
      	<if test="province !=null and province !=''">province=#{province},</if>
      	<if test="city !=null and city != ''">city=#{city},</if>
      	<if test="county !=null and county != ''">county=#{county}</if>
      	</set>
      	where id=#{id}
	</update>
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="Integer">
		DELETE FROM consumer where consumer.ID=#{id}
	</delete>
	
	<!-- 根据登陆手机查找user_id -->
	<select id="getUserIdByPhone" resultType="string">
		select id as userId from consumer where PN = #{userIphone}	
	</select>
	
	<!-- 更新手机验证码 -->
	<update id="updateCodeByPhone" parameterType="com.app.entity.BackUser">
		update consumer set 
			pw=#{passWord},
			nettime=#{nettime}
		where
			PN = #{userIphone}
	</update>
	
	<!-- 根据用户的手机号查询用户 -->
	<select id="getUserByPhone" parameterType="String" resultMap="BaseUserMap">
		SELECT ID,UN,PN,PW,nettime,PROVINCE,CITY,COUNTY,token FROM consumer
		where PN=#{phone}
	</select>
	
	<update id="updateToken">
		update consumer set token=#{0} where pn=#{1}
	</update>
	<!-- 根据token查询用户 -->
	<select id="getUserByToken" parameterType="String" resultMap="BaseUserMap">
		SELECT ID,UN,PN,PW,nettime,PROVINCE,CITY,COUNTY,token FROM consumer
		where token=#{token}
	</select>
</mapper>